import os
import cv2
import urllib
import numpy as np
from werkzeug.utils import secure_filename
from urllib.request import Request, urlopen
from flask import Flask, render_template, Response, request, redirect, flash, url_for
from camera import VideoCamera
from Graphical_Visualisation import Emotion_Analysis
app = Flask(__name__)
app.config['SEND_FILE_MAX_AGE_DEFAULT'] = 0
UPLOAD_FOLDER = 'static'
ALLOWED_EXTENSIONS = {'png', 'jpg', 'jpeg', 'gif'}
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER
def gen(camera):
    "" "Helps in Passing frames from Web Camera to server"""
    while True:
        frame = camera.get_frame()
        yield (b'--frame\r\n'
               b'Content-Type: image/jpeg\r\n\r\n' + frame +b'\r\n\r\n')
def allowed_file(filename):

      return ('.' in filename and
            filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS)
def mood(result):
    if result=="Happy":
        return 'Since you are happy, lets keep up the good mood with
some amazing music!'
    elif result=="Sad":
        return 'It seems that you are having a bad day, lets cheer you
up with some amazing music!'
    elif result=="Disgust":
        return 'It seems something has got you feeling disgusted. Lets improve your mood with some great music!'
    elif result=="Neutral":
         return 'It seems like a normal day. Lets turn it into a great
one with some amazing music!'
    elif result=="Fear":
        return 'You seem very scared. We are sure that some music will
help!'
    elif result=="Angry":
        return 'You seem angry. Listening to some music will surely help
you calm down!'
    elif result=="Surprise":
        return 'You seem surprised! Hopefully its some good news. Lets
celebrate it with some great music!'
def provide_url(result):
    if result=="Happy":
        return
'https://open.spotify.com/playlist/1BVPSd4dynzdlIWehjvkPj'
    elif result=="Sad":
        return 'https://www.writediary.com/ '
    elif result=="Disgust":
        return 'https://open.spotify.com'
    elif result=="Neutral":
         return 'https://www.netflix.com/'
    elif result=="Fear":
        return 'https://www.youtube.com/watch?v=KWt2-lUpg-E'
    elif result=="Angry":
        return 'https://www.onlinemeditation.org/'
    elif result=="Surprise":
        return
'https://www.google.com/search?q=hotels+near+me&oq=hotels+&aqs=chrome.1.69i57j0i433i457j0i402l2j0i433l4j0l2.3606j0j7&sourceid=chrome&ie=UTF-8'
def activities(result):
    if result == "Happy":
        return '• Try out some dance moves'

    elif result == "Sad":
        return '• Write in a journal'

    elif result == "Disgust":
        return '• Listen soothing music'

    elif result == "Neutral":
        return '• Watch your favourite movie'

    elif result == "Fear":
        return '• Get a good sleep'

    elif result == "Angry":
        return '• Do meditation'

    elif result == "Surprise":
        return '• Give yourself a treat' \
@app.route('/')
def Start():
    return render_template('Start.html')
@app.route('/video_feed')
def video_feed():
    return Response(gen(VideoCamera()),
                    mimetype='multipart/x-mixed-replace;
boundary=frame')
@app.route('/RealTime', methods=['POST'])
def RealTime():
    return render_template('RealTime.html')
@app.route('/takeimage', methods=['POST'])
def takeimage():
    v = VideoCamera()
    _, frame = v.video.read()
    save_to = "static/"
    cv2.imwrite(save_to + "capture" + ".jpg", frame)
    result = Emotion_Analysis("capture.jpg")
    if len(result) == 1:
        return render_template('NoDetection.html', orig=result[0])
    sentence = mood(result[3])
    activity = activities(result[3])
    link = provide_url(result[3])
    return render_template('Visual.html', orig=result[0], pred=result[1], bar=result[2], music=result[3],
                           sentence=sentence, activity=activity,
image=result[3], link=link)
@app.route('/ManualUpload', methods=['POST'])
def ManualUpload():
    return render_template('ManualUpload.html')
@app.route('/uploadimage', methods=['POST'])
def uploadimage():
    if request.method == 'POST':
        if 'file' not in request.files:
            flash('No file part')
            return redirect(request.url)
        file = request.files['file']
        if file.filename == '':
            flash('No selected file')
            return redirect(request.url)
        if file and allowed_file(file.filename): 
            filename = secure_filename(file.filename)
            file.save(os.path.join(app.config['UPLOAD_FOLDER'],
filename))
            result = Emotion_Analysis(filename)
            if len(result) == 1:
                return render_template('NoDetection.html', orig=result[0])
            sentence = mood(result[3])
            activity = activities(result[3])
            link = provide_url(result[3])
            return render_template('Visual.html', orig=result[0], pred=result[1], bar=result[2], music=result[3],
                                   sentence=sentence, activity=activity,
image=result[3], link=link)
@app.route('/imageurl', methods=['POST'])
def imageurl():
    url = request.form['url']
    req = Request(url,
                  headers={'User-Agent': 'Mozilla/5.0'})
    webpage = urlopen(req).read()
    arr = np.asarray(bytearray(webpage), dtype=np.uint8)
    img = cv2.imdecode(arr, -1)
    save_to = "static/"
    cv2.imwrite(save_to + "url.jpg", img)
    result = Emotion_Analysis("url.jpg")
    if len(result) == 1:
        return render_template('NoDetection.html', orig=result[0])
    sentence = mood(result[3])
    activity = activities(result[3])
    link = provide_url(result[3])
    return render_template('Visual.html', orig=result[0], pred=result[1], bar=result[2], music=result[3],
                           sentence=sentence, activity=activity, image=result[3], link=link)
if __name__ == '__main__':
    app.run(debug=True)
